.MODEL SMALL
.STACK 1000H
.DATA
	number DB "00000$"
.CODE
func PROC
	PUSH BP
	MOV BP, SP
	SUB SP, 2
L1:
	MOV AX, [BP+4]
	PUSH AX
	PUSH 0
	POP AX
	POP DX
	CMP DX, AX
	JE L2
	PUSH 0
	JMP L3
L2:
	PUSH 1
L3:
	POP AX
	CMP AX, 0
	JE L4
	PUSH 0
	POP DX
	MOV AX, DX
	ADD SP, 2
	POP BP
	RET 2
L4:
L5:
	MOV AX, [BP+4]
	PUSH AX
	POP AX
	MOV [BP-2], AX
	PUSH AX
	POP AX
L6:
	MOV AX, [BP+4]
	PUSH AX
	PUSH 1
	POP AX
	POP DX
	SUB DX, AX
	MOV AX, DX
	PUSH AX
	POP AX
	PUSH AX
	CALL func
	PUSH AX
	MOV AX, [BP-2]
	PUSH AX
	POP AX
	POP DX
	ADD AX, DX
	PUSH AX
	POP DX
	MOV AX, DX
	ADD SP, 2
	POP BP
	RET 2
	ADD SP, 0
func ENDP
func2 PROC
	PUSH BP
	MOV BP, SP
	SUB SP, 2
L7:
	MOV AX, [BP+4]
	PUSH AX
	PUSH 0
	POP AX
	POP DX
	CMP DX, AX
	JE L8
	PUSH 0
	JMP L9
L8:
	PUSH 1
L9:
	POP AX
	CMP AX, 0
	JE L10
	PUSH 0
	POP DX
	MOV AX, DX
	ADD SP, 4
	POP BP
	RET 2
L10:
L11:
	MOV AX, [BP+4]
	PUSH AX
	POP AX
	MOV [BP-4], AX
	PUSH AX
	POP AX
L12:
	MOV AX, [BP+4]
	PUSH AX
	PUSH 1
	POP AX
	POP DX
	SUB DX, AX
	MOV AX, DX
	PUSH AX
	POP AX
	PUSH AX
	CALL func
	PUSH AX
	MOV AX, [BP-4]
	PUSH AX
	POP AX
	POP DX
	ADD AX, DX
	PUSH AX
	POP DX
	MOV AX, DX
	ADD SP, 4
	POP BP
	RET 2
	ADD SP, 0
func2 ENDP
main PROC
	MOV AX, @DATA
	MOV DS, AX
	PUSH BP
	MOV BP, SP
	SUB SP, 2
L13:
	PUSH 7
	POP AX
	PUSH AX
	CALL func
	PUSH AX
	POP AX
	MOV [BP-6], AX
	PUSH AX
	POP AX
L14:
	MOV AX, [BP-6]
	CALL print_output
	CALL new_line
L15:
	PUSH 0
	POP DX
	MOV AX, DX
	ADD SP, 6
	POP BP
	MOV AX, 4CH
	INT 21H
	ADD SP, 2
main ENDP
new_line proc
    push ax
    push dx
    mov ah,2
    mov dl,0Dh
    int 21h
    mov ah,2
    mov dl,0Ah
    int 21h
    pop dx
    pop ax
    ret
    new_line endp
print_output proc  ;print what is in ax
    push ax
    push bx
    push cx
    push dx
    push si
    lea si,number
    mov bx,10
    add si,4
    cmp ax,0
    jnge negate
    print:
    xor dx,dx
    div bx
    mov [si],dl
    add [si],'0'
    dec si
    cmp ax,0
    jne print
    inc si
    lea dx,si
    mov ah,9
    int 21h
    pop si
    pop dx
    pop cx
    pop bx
    pop ax
    ret
    negate:
    push ax
    mov ah,2
    mov dl,'-'
    int 21h
    pop ax
    neg ax
    jmp print
    print_output endp

END main
