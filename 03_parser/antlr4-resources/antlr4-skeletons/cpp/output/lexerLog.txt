Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme var
Line# 1: Token <LPAREN> Lexeme (
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme a
Line# 1: Token <COMMA> Lexeme ,
Line# 1: Token <INT> Lexeme int
Line# 1: Token <ID> Lexeme b
Line# 1: Token <RPAREN> Lexeme )
Line# 1: Token <LCURL> Lexeme {
Line# 2: Token <RETURN> Lexeme return
Line# 2: Token <ID> Lexeme a
Line# 2: Token <ADDOP> Lexeme +
Line# 2: Token <ID> Lexeme b
Line# 2: Token <SEMICOLON> Lexeme ;
Line# 3: Token <RCURL> Lexeme }
Line# 4: Token <INT> Lexeme int
Line# 4: Token <ID> Lexeme main
Line# 4: Token <LPAREN> Lexeme (
Line# 4: Token <RPAREN> Lexeme )
Line# 4: Token <LCURL> Lexeme {
Line# 5: Token <FLOAT> Lexeme float
Line# 5: Token <ID> Lexeme d
Line# 5: Token <SEMICOLON> Lexeme ;
Line# 6: Token <ID> Lexeme d
Line# 6: Token <ASSIGNOP> Lexeme =
Line# 6: Token <ID> Lexeme var
Line# 6: Token <LPAREN> Lexeme (
Line# 6: Token <CONST_INT> Lexeme 1
Line# 6: Token <COMMA> Lexeme ,
Line# 6: Token <CONST_INT> Lexeme 2
Line# 6: Token <MULOP> Lexeme *
Line# 6: Token <CONST_INT> Lexeme 3
Line# 6: Token <RPAREN> Lexeme )
Line# 6: Token <ADDOP> Lexeme +
Line# 6: Token <CONST_FLOAT> Lexeme 3.5
Line# 6: Token <MULOP> Lexeme *
Line# 6: Token <CONST_INT> Lexeme 2
Line# 6: Token <SEMICOLON> Lexeme ;
Line# 7: Token <INT> Lexeme int
Line# 7: Token <ID> Lexeme i
Line# 7: Token <ASSIGNOP> Lexeme =
Line# 7: Token <CONST_INT> Lexeme 0
Line# 7: Token <SEMICOLON> Lexeme ;
Line# 8: Token <DO> Lexeme do
Line# 8: Token <LCURL> Lexeme {
Line# 9: Token <IF> Lexeme if
Line# 9: Token <LPAREN> Lexeme (
Line# 9: Token <ID> Lexeme i
Line# 9: Token <CONST_INT> Lexeme 3
Line# 9: Token <RPAREN> Lexeme )
Line# 9: Token <BREAK> Lexeme break
Line# 9: Token <SEMICOLON> Lexeme ;
Line# 10: Token <ID> Lexeme i
Line# 10: Token <INCOP> Lexeme ++
Line# 10: Token <SEMICOLON> Lexeme ;
Line# 11: Token <RCURL> Lexeme }
Line# 11: Token <WHILE> Lexeme while
Line# 11: Token <LPAREN> Lexeme (
Line# 11: Token <ID> Lexeme i
Line# 11: Token <CONST_INT> Lexeme 5
Line# 11: Token <RPAREN> Lexeme )
Line# 11: Token <SEMICOLON> Lexeme ;
Line# 12: Token <BREAK> Lexeme break
Line# 12: Token <SEMICOLON> Lexeme ;
Line# 13: Token <RETURN> Lexeme return
Line# 13: Token <CONST_INT> Lexeme 0
Line# 13: Token <SEMICOLON> Lexeme ;
Line# 14: Token <RCURL> Lexeme }
